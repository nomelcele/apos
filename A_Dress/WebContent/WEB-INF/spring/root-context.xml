<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
  	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd">


	<mvc:default-servlet-handler />
	<mvc:annotation-driven />
	<!-- javascript,Jquery,css,image를 사용하겟다. -->
	<mvc:resources location="/resources/" mapping="/resources/**/"></mvc:resources>
	<context:component-scan base-package="or.adress.mvc" />


	<beans:bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<beans:property name="jndiName" value="java:comp/env/jdbc/myora" />
	</beans:bean>
	<!-- MyBatis 설정 -->
	<beans:bean id="factoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="configLocation" value="classpath:or/adress/config/config.xml" />
		<beans:property name="mapperLocations" value="classpath*:or/adress/mapper/*.xml" />
	</beans:bean>
	<!-- Spring이 제공해주는 myBatis템플릿 객체의 빈설정 -->
	<beans:bean id="ss" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg ref="factoryBean"></beans:constructor-arg>
	</beans:bean>
	<beans:bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
	</beans:bean>
	<!-- Xml 파싱을 위해 클래스 설정  -->
	<beans:bean id="makeXml" class="xml.MakeXML"/>
	<!-- 메일 전송을 위한 클래스 bean 설정 -->
	<beans:bean id="sendConfirmJoiningMail" class="mail.SendConfirmJoiningMail"/>
	<beans:bean id="sendRefuseJoiningMail" class="mail.SendRefuseJoiningMail"/>
	<beans:bean id="sendRecommendProductMail" class="mail.SendRecommendProductMail"/>
	<beans:bean id="sendFindIdMail" class="mail.SendFindIdMail"/>
	<beans:bean id="sendFindPwdMail" class="mail.SendFindPwdMail"/>
	<!-- transaction annotation 방식 설정 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10485760" />
	</beans:bean>


	<!-- 롤보터를 내맘대로 커스터마이징해서 쓸수있기위해 -->
 <beans:bean id="roleVoter"
  class="org.springframework.security.access.vote.RoleVoter">
  <beans:property name="rolePrefix" value=""></beans:property>
 </beans:bean>

 <beans:bean id="accessDecisionManager"
  class="org.springframework.security.access.vote.AffirmativeBased">
  <beans:constructor-arg name="decisionVoters"
   ref="roleVoter" />
 </beans:bean>
 
 <http authentication-manager-ref="jdbc-auth"
 access-decision-manager-ref="accessDecisionManager">
 	<!-- 해당url은 admin만 접근가능 -->
  <intercept-url pattern="/bon_*" access="bonsa" />
  <intercept-url pattern="/sh_*" access="shop,staff"/>
  <intercept-url pattern="/ssh_*" access="shop"/>
  <form-login login-page="/login" authentication-failure-url="/denied"
   username-parameter="username" password-parameter="password" login-processing-url="/loging"
   default-target-url="/home" />
  <logout invalidate-session="true" logout-success-url="/login"
   logout-url="/j_spring_security_logout" />
  <access-denied-handler error-page="/error"/>
  <session-management invalid-session-url="/login">
   <concurrency-control max-sessions="1"
    expired-url="/login" />
  </session-management>
 </http>

 <authentication-manager id="in-memory-auth">
  <authentication-provider>
   <user-service>
    <user name="pankaj" password="pankaj123" authorities="Admin" />
   </user-service>
  </authentication-provider>
 </authentication-manager>

 <authentication-manager id="dao-auth">
  <authentication-provider user-service-ref="userDetailsService">
  </authentication-provider>
 </authentication-manager>

<beans:bean id="userDetailsService"
      class="or.adress.mvc.dao.AppUserDetailsServiceDAO" />
      

 <authentication-manager id="jdbc-auth">
  <authentication-provider>
   <jdbc-user-service data-source-ref="dataSource"
    users-by-username-query="select username,password,enabled from login where username = ?"
    authorities-by-username-query="select username,role from grade where username = ?" />
  </authentication-provider>
 </authentication-manager>
<!--     <beans:bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> -->
<!--   <beans:property name="jndiName" value="java:comp/env/jdbc/myora" /> -->
<!--  </beans:bean> -->



</beans:beans>